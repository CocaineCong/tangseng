// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: favorite.proto

package favorite

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FavoritesServiceClient is the client API for FavoritesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FavoritesServiceClient interface {
	FavoriteCreate(ctx context.Context, in *FavoriteCreateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error)
	FavoriteUpdate(ctx context.Context, in *FavoriteUpdateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error)
	FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResponse, error)
	FavoriteDelete(ctx context.Context, in *FavoriteDeleteReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error)
	FavoriteDetailCreate(ctx context.Context, in *FavoriteDetailCreateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error)
	FavoriteDetailList(ctx context.Context, in *FavoriteDetailListReq, opts ...grpc.CallOption) (*FavoriteDetailListResponse, error)
	FavoriteDetailDelete(ctx context.Context, in *FavoriteDetailDeleteReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error)
}

type favoritesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFavoritesServiceClient(cc grpc.ClientConnInterface) FavoritesServiceClient {
	return &favoritesServiceClient{cc}
}

func (c *favoritesServiceClient) FavoriteCreate(ctx context.Context, in *FavoriteCreateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error) {
	out := new(FavoriteCommonResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteUpdate(ctx context.Context, in *FavoriteUpdateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error) {
	out := new(FavoriteCommonResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResponse, error) {
	out := new(FavoriteListResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteDelete(ctx context.Context, in *FavoriteDeleteReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error) {
	out := new(FavoriteCommonResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteDetailCreate(ctx context.Context, in *FavoriteDetailCreateReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error) {
	out := new(FavoriteCommonResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteDetailCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteDetailList(ctx context.Context, in *FavoriteDetailListReq, opts ...grpc.CallOption) (*FavoriteDetailListResponse, error) {
	out := new(FavoriteDetailListResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteDetailList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *favoritesServiceClient) FavoriteDetailDelete(ctx context.Context, in *FavoriteDetailDeleteReq, opts ...grpc.CallOption) (*FavoriteCommonResponse, error) {
	out := new(FavoriteCommonResponse)
	err := c.cc.Invoke(ctx, "/FavoritesService/FavoriteDetailDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoritesServiceServer is the server API for FavoritesService service.
// All implementations must embed UnimplementedFavoritesServiceServer
// for forward compatibility
type FavoritesServiceServer interface {
	FavoriteCreate(context.Context, *FavoriteCreateReq) (*FavoriteCommonResponse, error)
	FavoriteUpdate(context.Context, *FavoriteUpdateReq) (*FavoriteCommonResponse, error)
	FavoriteList(context.Context, *FavoriteListReq) (*FavoriteListResponse, error)
	FavoriteDelete(context.Context, *FavoriteDeleteReq) (*FavoriteCommonResponse, error)
	FavoriteDetailCreate(context.Context, *FavoriteDetailCreateReq) (*FavoriteCommonResponse, error)
	FavoriteDetailList(context.Context, *FavoriteDetailListReq) (*FavoriteDetailListResponse, error)
	FavoriteDetailDelete(context.Context, *FavoriteDetailDeleteReq) (*FavoriteCommonResponse, error)
	mustEmbedUnimplementedFavoritesServiceServer()
}

// UnimplementedFavoritesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedFavoritesServiceServer struct {
}

func (UnimplementedFavoritesServiceServer) FavoriteCreate(context.Context, *FavoriteCreateReq) (*FavoriteCommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteCreate not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteUpdate(context.Context, *FavoriteUpdateReq) (*FavoriteCommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteUpdate not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteList(context.Context, *FavoriteListReq) (*FavoriteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteList not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteDelete(context.Context, *FavoriteDeleteReq) (*FavoriteCommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteDelete not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteDetailCreate(context.Context, *FavoriteDetailCreateReq) (*FavoriteCommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteDetailCreate not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteDetailList(context.Context, *FavoriteDetailListReq) (*FavoriteDetailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteDetailList not implemented")
}
func (UnimplementedFavoritesServiceServer) FavoriteDetailDelete(context.Context, *FavoriteDetailDeleteReq) (*FavoriteCommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteDetailDelete not implemented")
}
func (UnimplementedFavoritesServiceServer) mustEmbedUnimplementedFavoritesServiceServer() {}

// UnsafeFavoritesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FavoritesServiceServer will
// result in compilation errors.
type UnsafeFavoritesServiceServer interface {
	mustEmbedUnimplementedFavoritesServiceServer()
}

func RegisterFavoritesServiceServer(s grpc.ServiceRegistrar, srv FavoritesServiceServer) {
	s.RegisterService(&FavoritesService_ServiceDesc, srv)
}

func _FavoritesService_FavoriteCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteCreate(ctx, req.(*FavoriteCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteUpdate(ctx, req.(*FavoriteUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteList(ctx, req.(*FavoriteListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteDelete(ctx, req.(*FavoriteDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteDetailCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteDetailCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteDetailCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteDetailCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteDetailCreate(ctx, req.(*FavoriteDetailCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteDetailListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteDetailList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteDetailList(ctx, req.(*FavoriteDetailListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FavoritesService_FavoriteDetailDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteDetailDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoritesServiceServer).FavoriteDetailDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/FavoritesService/FavoriteDetailDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoritesServiceServer).FavoriteDetailDelete(ctx, req.(*FavoriteDetailDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

// FavoritesService_ServiceDesc is the grpc.ServiceDesc for FavoritesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FavoritesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "FavoritesService",
	HandlerType: (*FavoritesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FavoriteCreate",
			Handler:    _FavoritesService_FavoriteCreate_Handler,
		},
		{
			MethodName: "FavoriteUpdate",
			Handler:    _FavoritesService_FavoriteUpdate_Handler,
		},
		{
			MethodName: "FavoriteList",
			Handler:    _FavoritesService_FavoriteList_Handler,
		},
		{
			MethodName: "FavoriteDelete",
			Handler:    _FavoritesService_FavoriteDelete_Handler,
		},
		{
			MethodName: "FavoriteDetailCreate",
			Handler:    _FavoritesService_FavoriteDetailCreate_Handler,
		},
		{
			MethodName: "FavoriteDetailList",
			Handler:    _FavoritesService_FavoriteDetailList_Handler,
		},
		{
			MethodName: "FavoriteDetailDelete",
			Handler:    _FavoritesService_FavoriteDetailDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favorite.proto",
}
